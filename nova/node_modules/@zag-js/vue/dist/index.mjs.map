{"version":3,"sources":["../src/index.ts","../src/normalize-props.ts","../src/use-actor.ts","../src/use-machine.ts","../src/use-snapshot.ts"],"sourcesContent":["export { mergeProps } from \"@zag-js/core\"\nexport type { ContextFrom, EventFrom, StateFrom } from \"@zag-js/core\"\nexport * from \"./normalize-props\"\nexport * from \"./use-actor\"\nexport * from \"./use-machine\"\nexport * from \"./use-snapshot\"\n","import { createNormalizer } from \"@zag-js/types\"\nimport type * as Vue from \"vue\"\n\ntype ReservedProps = {\n  key?: string | number | symbol\n  ref?: Vue.VNodeRef\n}\n\ntype Attrs<T> = T & ReservedProps\n\nexport type PropTypes = Vue.NativeElements & {\n  element: Attrs<Vue.HTMLAttributes>\n  style: Vue.CSSProperties\n}\n\ntype Dict = Record<string, string>\n\nfunction toCase(txt: string) {\n  return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase()\n}\n\nconst propMap = {\n  htmlFor: \"for\",\n  className: \"class\",\n  onDoubleClick: \"onDblclick\",\n  onChange: \"onInput\",\n  onFocus: \"onFocusin\",\n  onBlur: \"onFocusout\",\n  defaultValue: \"value\",\n  defaultChecked: \"checked\",\n}\n\nfunction toVueProp(prop: string) {\n  if (prop in propMap) return propMap[prop]\n\n  if (prop.startsWith(\"on\")) {\n    return `on${toCase(prop.substr(2))}`\n  }\n\n  return prop.toLowerCase()\n}\n\nexport const normalizeProps = createNormalizer<PropTypes>((props: Dict) => {\n  const normalized: Dict = {}\n  for (const key in props) {\n    const value = props[key]\n    if (key === \"children\") {\n      if (typeof value === \"string\") {\n        normalized[\"innerHTML\"] = value\n      } else if (process.env.NODE_ENV !== \"production\" && value != null) {\n        console.warn(\"[Vue Normalize Prop] : avoid passing non-primitive value as `children`\")\n      }\n    } else {\n      normalized[toVueProp(key)] = props[key]\n    }\n  }\n  return normalized\n})\n","import type { Machine, StateMachine as S } from \"@zag-js/core\"\nimport { onBeforeUnmount, onMounted, shallowRef } from \"vue\"\n\nexport function useActor<\n  TContext extends Record<string, any>,\n  TState extends S.StateSchema,\n  TEvent extends S.EventObject = S.AnyEventObject,\n>(service: Machine<TContext, TState, TEvent>) {\n  const state = shallowRef(service.state)\n\n  onMounted(() => {\n    const unsubscribe = service.subscribe((nextState) => {\n      state.value = nextState\n    })\n\n    onBeforeUnmount(() => {\n      unsubscribe?.()\n    })\n  })\n\n  return [state, service.send] as const\n}\n","import type { MachineSrc, StateMachine as S } from \"@zag-js/core\"\nimport { onBeforeUnmount, onMounted, shallowRef, watch, watchEffect, type ComputedRef, type Ref } from \"vue\"\n\ntype MachineOptions<\n  TContext extends Record<string, any>,\n  TState extends S.StateSchema,\n  TEvent extends S.EventObject = S.AnyEventObject,\n> = Omit<S.HookOptions<TContext, TState, TEvent>, \"context\"> & {\n  context?: Ref<S.UserContext<TContext>> | ComputedRef<S.UserContext<TContext>>\n}\n\nexport function useService<\n  TContext extends Record<string, any>,\n  TState extends S.StateSchema,\n  TEvent extends S.EventObject = S.AnyEventObject,\n>(machine: MachineSrc<TContext, TState, TEvent>, options?: MachineOptions<TContext, TState, TEvent>) {\n  const { actions, state: hydratedState, context } = options ?? {}\n\n  const _machine = typeof machine === \"function\" ? machine() : machine\n  const service = context ? _machine.withContext(context.value) : _machine\n\n  onMounted(() => {\n    service.start(hydratedState)\n\n    if (service.state.can(\"SETUP\")) {\n      service.send(\"SETUP\")\n    }\n\n    onBeforeUnmount(() => {\n      service.stop()\n    })\n  })\n\n  watchEffect(() => {\n    service.setOptions({ actions })\n  })\n\n  if (context) {\n    watch(context, service.setContext, { deep: true })\n  }\n\n  return service\n}\n\nexport function useMachine<\n  TContext extends Record<string, any>,\n  TState extends S.StateSchema,\n  TEvent extends S.EventObject = S.AnyEventObject,\n>(\n  machine: MachineSrc<TContext, TState, TEvent>,\n  options?: Omit<S.HookOptions<TContext, TState, TEvent>, \"context\"> & {\n    context?: Ref<S.UserContext<TContext>> | ComputedRef<S.UserContext<TContext>>\n  },\n) {\n  const service = useService(machine, options)\n  const state = shallowRef(service.state)\n\n  onMounted(() => {\n    const unsubscribe = service.subscribe((nextState) => {\n      state.value = nextState\n    })\n\n    onBeforeUnmount(() => {\n      unsubscribe?.()\n    })\n  })\n\n  return [state, service.send, service] as const\n}\n","import { snapshot, subscribe } from \"@zag-js/store\"\nimport { onUnmounted, ref, type UnwrapRef } from \"vue\"\n\nexport const useSnapshot = <T extends object>(object: T) => {\n  const state = ref({} as T)\n  const unsubscribe = subscribe(object, () => {\n    state.value = snapshot(object) as UnwrapRef<T>\n  })\n\n  onUnmounted(() => {\n    unsubscribe?.()\n  })\n\n  return state\n}\n"],"mappings":"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","names":["onBeforeUnmount","onMounted","shallowRef"]}