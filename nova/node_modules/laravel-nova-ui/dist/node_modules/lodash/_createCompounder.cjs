'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const _arrayReduce = require('./_arrayReduce.cjs');
const deburr$1 = require('./deburr.cjs');
const words$1 = require('./words.cjs');

var arrayReduce = _arrayReduce._arrayReduce,
    deburr = deburr$1.deburr_1,
    words = words$1.words_1;

/** Used to compose unicode capture groups. */
var rsApos = "['\u2019]";

/** Used to match apostrophes. */
var reApos = RegExp(rsApos, 'g');

/**
 * Creates a function like `_.camelCase`.
 *
 * @private
 * @param {Function} callback The function to combine each word.
 * @returns {Function} Returns the new compounder function.
 */
function createCompounder(callback) {
  return function(string) {
    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
  };
}

var _createCompounder = createCompounder;

exports._createCompounder = _createCompounder;
