'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const _castPath = require('./_castPath.cjs');
const last$1 = require('./last.cjs');
const _parent = require('./_parent.cjs');
const _toKey = require('./_toKey.cjs');

var castPath = _castPath._castPath,
    last = last$1.last_1,
    parent = _parent._parent,
    toKey = _toKey._toKey;

/**
 * The base implementation of `_.unset`.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {Array|string} path The property path to unset.
 * @returns {boolean} Returns `true` if the property is deleted, else `false`.
 */
function baseUnset(object, path) {
  path = castPath(path, object);
  object = parent(object, path);
  return object == null || delete object[toKey(last(path))];
}

var _baseUnset = baseUnset;

exports._baseUnset = _baseUnset;
