'use strict';

Object.defineProperties(exports, { __esModule: { value: true }, [Symbol.toStringTag]: { value: 'Module' } });

const vue = require('vue');
const index$1 = require('../../node_modules/@heroicons/vue/24/outline/esm/index.cjs');
const index = require('../../node_modules/@heroicons/vue/24/solid/esm/index.cjs');
const index$2 = require('../../node_modules/@heroicons/vue/20/solid/esm/index.cjs');
const index$3 = require('../../node_modules/@heroicons/vue/16/solid/esm/index.cjs');
const camelCase = require('../../node_modules/lodash/camelCase.cjs');
const startCase = require('../../node_modules/lodash/startCase.cjs');

const _sfc_main = /* @__PURE__ */ vue.defineComponent({
  __name: "Icon",
  props: {
    name: { default: "ellipsis-horizontal" },
    type: { default: "outline" }
  },
  setup(__props) {
    const props = __props;
    const iconTypes = {
      solid: index,
      outline: index$1,
      mini: index$2,
      micro: index$3
    };
    const component = vue.computed(function() {
      return iconTypes[props.type][startCase.default(camelCase.default(props.name)).replace(/ /g, "") + "Icon"];
    });
    const classes = vue.computed(() => {
      if (props.type === "mini") {
        return "w-5 h-5";
      }
      if (props.type === "micro") {
        return "w-4 h-4";
      }
      return "w-6 h-6";
    });
    return (_ctx, _cache) => {
      return vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(component.value), {
        class: vue.normalizeClass(classes.value)
      }, null, 8, ["class"]);
    };
  }
});

exports.default = _sfc_main;
