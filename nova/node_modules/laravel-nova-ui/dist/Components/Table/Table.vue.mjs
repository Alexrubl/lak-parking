import { defineComponent, openBlock, createElementBlock, createElementVNode, withDirectives, vShow, createVNode, createCommentVNode, renderSlot } from 'vue';
import _sfc_main$1 from '../Loader/Loader.vue.mjs';

const _hoisted_1 = { class: "relative overflow-hidden overflow-x-auto" };
const _hoisted_2 = { class: "absolute inset-0 z-10 bg-white opacity-75 dark:bg-gray-950" };
const _hoisted_3 = { key: 0 };
const _hoisted_4 = { class: "py-6" };
const _hoisted_5 = { key: 1 };
const _hoisted_6 = {
  key: 2,
  class: "divide-y divide-gray-100 dark:divide-gray-700"
};
const _hoisted_7 = {
  key: 0,
  class: "w-full divide-y divide-gray-100 dark:divide-gray-700"
};
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "Table",
  props: {
    loading: { type: Boolean, default: false },
    refreshing: { type: Boolean, default: false },
    empty: { type: Boolean, default: false }
  },
  setup(__props) {
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", null, [
        createElementVNode("div", _hoisted_1, [
          withDirectives(createElementVNode("div", _hoisted_2, null, 512), [
            [vShow, _ctx.refreshing]
          ]),
          _ctx.loading ? (openBlock(), createElementBlock("div", _hoisted_3, [
            createElementVNode("div", _hoisted_4, [
              createVNode(_sfc_main$1, { class: "text-gray-400" })
            ])
          ])) : createCommentVNode("", true),
          _ctx.empty ? (openBlock(), createElementBlock("div", _hoisted_5, [
            renderSlot(_ctx.$slots, "empty")
          ])) : createCommentVNode("", true),
          !_ctx.loading && !_ctx.empty ? (openBlock(), createElementBlock("div", _hoisted_6, [
            renderSlot(_ctx.$slots, "toolbar"),
            !_ctx.loading && !_ctx.empty ? (openBlock(), createElementBlock("table", _hoisted_7, [
              renderSlot(_ctx.$slots, "default")
            ])) : createCommentVNode("", true),
            renderSlot(_ctx.$slots, "footer")
          ])) : createCommentVNode("", true)
        ])
      ]);
    };
  }
});

export { _sfc_main as default };
